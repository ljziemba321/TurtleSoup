Terminals unused in grammar

   SHELL
   ENDSHELL


Grammar

    0 $accept: program $end

    1 program: HATCH Fill SOUP

    2 Fill: Insts Declars Commands

    3 Insts: INSTINCT ENDINSTINCT

    4 Declars: Declars NewTurtle
    5        | Declars NewVar
    6        | NewVar
    7        | NewTurtle

    8 Commands: Commands TurtCommand
    9         | Commands VarIs
   10         | Commands DoLoop
   11         | DoLoop
   12         | VarIs
   13         | TurtCommand

   14 @1: %empty

   15 DoLoop: DO @1 Expr Commands ENDDO

   16 TurtCommand: NAME Order

   17 Order: NOTRAIL
   18      | TRAIL
   19      | LEFT
   20      | RIGHT
   21      | TURN Expr
   22      | TURN NEG Expr
   23      | FORWARD Expr
   24      | COLOR COL

   25 VarIs: NAME IS Expr

   26 NewVar: NUM NAME

   27 NewTurtle: TURTLE NAME

   28 Expr: Expr OP T
   29     | Expr NEG T
   30     | Expr OP NEG T
   31     | Expr NEG NEG T
   32     | T

   33 T: '(' Expr ')'
   34  | NUMBER
   35  | NAME


Terminals, with rules where they appear

$end (0) 0
'(' (40) 33
')' (41) 33
error (256)
HATCH (258) 1
SOUP (259) 1
TURTLE (260) 27
NUM (261) 26
COLOR (262) 24
NOTRAIL (263) 17
TRAIL (264) 18
FORWARD (265) 23
RIGHT (266) 20
LEFT (267) 19
IS (268) 25
SHELL (269)
ENDSHELL (270)
DO (271) 15
ENDDO (272) 15
INSTINCT (273) 3
ENDINSTINCT (274) 3
COL (275) 24
NUMBER (276) 34
NAME (277) 16 25 26 27 35
TURN (278) 21 22
OP (279) 28 30
NEG (280) 22 29 30 31


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 1, on right: 0
Fill (30)
    on left: 2, on right: 1
Insts (31)
    on left: 3, on right: 2
Declars (32)
    on left: 4 5 6 7, on right: 2 4 5
Commands (33)
    on left: 8 9 10 11 12 13, on right: 2 8 9 10 15
DoLoop (34)
    on left: 15, on right: 10 11
@1 (35)
    on left: 14, on right: 15
TurtCommand (36)
    on left: 16, on right: 8 13
Order (37)
    on left: 17 18 19 20 21 22 23 24, on right: 16
VarIs (38)
    on left: 25, on right: 9 12
NewVar (39)
    on left: 26, on right: 5 6
NewTurtle (40)
    on left: 27, on right: 4 7
Expr (41)
    on left: 28 29 30 31 32, on right: 15 21 22 23 25 28 29 30 31 33
T (42)
    on left: 33 34 35, on right: 28 29 30 31 32


State 0

    0 $accept: . program $end

    HATCH  shift, and go to state 1

    program  go to state 2


State 1

    1 program: HATCH . Fill SOUP

    INSTINCT  shift, and go to state 3

    Fill   go to state 4
    Insts  go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    3 Insts: INSTINCT . ENDINSTINCT

    ENDINSTINCT  shift, and go to state 7


State 4

    1 program: HATCH Fill . SOUP

    SOUP  shift, and go to state 8


State 5

    2 Fill: Insts . Declars Commands

    TURTLE  shift, and go to state 9
    NUM     shift, and go to state 10

    Declars    go to state 11
    NewVar     go to state 12
    NewTurtle  go to state 13


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 Insts: INSTINCT ENDINSTINCT .

    $default  reduce using rule 3 (Insts)


State 8

    1 program: HATCH Fill SOUP .

    $default  reduce using rule 1 (program)


State 9

   27 NewTurtle: TURTLE . NAME

    NAME  shift, and go to state 14


State 10

   26 NewVar: NUM . NAME

    NAME  shift, and go to state 15


State 11

    2 Fill: Insts Declars . Commands
    4 Declars: Declars . NewTurtle
    5        | Declars . NewVar

    TURTLE  shift, and go to state 9
    NUM     shift, and go to state 10
    DO      shift, and go to state 16
    NAME    shift, and go to state 17

    Commands     go to state 18
    DoLoop       go to state 19
    TurtCommand  go to state 20
    VarIs        go to state 21
    NewVar       go to state 22
    NewTurtle    go to state 23


State 12

    6 Declars: NewVar .

    $default  reduce using rule 6 (Declars)


State 13

    7 Declars: NewTurtle .

    $default  reduce using rule 7 (Declars)


State 14

   27 NewTurtle: TURTLE NAME .

    $default  reduce using rule 27 (NewTurtle)


State 15

   26 NewVar: NUM NAME .

    $default  reduce using rule 26 (NewVar)


State 16

   15 DoLoop: DO . @1 Expr Commands ENDDO

    $default  reduce using rule 14 (@1)

    @1  go to state 24


State 17

   16 TurtCommand: NAME . Order
   25 VarIs: NAME . IS Expr

    COLOR    shift, and go to state 25
    NOTRAIL  shift, and go to state 26
    TRAIL    shift, and go to state 27
    FORWARD  shift, and go to state 28
    RIGHT    shift, and go to state 29
    LEFT     shift, and go to state 30
    IS       shift, and go to state 31
    TURN     shift, and go to state 32

    Order  go to state 33


State 18

    2 Fill: Insts Declars Commands .
    8 Commands: Commands . TurtCommand
    9         | Commands . VarIs
   10         | Commands . DoLoop

    DO    shift, and go to state 16
    NAME  shift, and go to state 17

    $default  reduce using rule 2 (Fill)

    DoLoop       go to state 34
    TurtCommand  go to state 35
    VarIs        go to state 36


State 19

   11 Commands: DoLoop .

    $default  reduce using rule 11 (Commands)


State 20

   13 Commands: TurtCommand .

    $default  reduce using rule 13 (Commands)


State 21

   12 Commands: VarIs .

    $default  reduce using rule 12 (Commands)


State 22

    5 Declars: Declars NewVar .

    $default  reduce using rule 5 (Declars)


State 23

    4 Declars: Declars NewTurtle .

    $default  reduce using rule 4 (Declars)


State 24

   15 DoLoop: DO @1 . Expr Commands ENDDO

    NUMBER  shift, and go to state 37
    NAME    shift, and go to state 38
    '('     shift, and go to state 39

    Expr  go to state 40
    T     go to state 41


State 25

   24 Order: COLOR . COL

    COL  shift, and go to state 42


State 26

   17 Order: NOTRAIL .

    $default  reduce using rule 17 (Order)


State 27

   18 Order: TRAIL .

    $default  reduce using rule 18 (Order)


State 28

   23 Order: FORWARD . Expr

    NUMBER  shift, and go to state 37
    NAME    shift, and go to state 38
    '('     shift, and go to state 39

    Expr  go to state 43
    T     go to state 41


State 29

   20 Order: RIGHT .

    $default  reduce using rule 20 (Order)


State 30

   19 Order: LEFT .

    $default  reduce using rule 19 (Order)


State 31

   25 VarIs: NAME IS . Expr

    NUMBER  shift, and go to state 37
    NAME    shift, and go to state 38
    '('     shift, and go to state 39

    Expr  go to state 44
    T     go to state 41


State 32

   21 Order: TURN . Expr
   22      | TURN . NEG Expr

    NUMBER  shift, and go to state 37
    NAME    shift, and go to state 38
    NEG     shift, and go to state 45
    '('     shift, and go to state 39

    Expr  go to state 46
    T     go to state 41


State 33

   16 TurtCommand: NAME Order .

    $default  reduce using rule 16 (TurtCommand)


State 34

   10 Commands: Commands DoLoop .

    $default  reduce using rule 10 (Commands)


State 35

    8 Commands: Commands TurtCommand .

    $default  reduce using rule 8 (Commands)


State 36

    9 Commands: Commands VarIs .

    $default  reduce using rule 9 (Commands)


State 37

   34 T: NUMBER .

    $default  reduce using rule 34 (T)


State 38

   35 T: NAME .

    $default  reduce using rule 35 (T)


State 39

   33 T: '(' . Expr ')'

    NUMBER  shift, and go to state 37
    NAME    shift, and go to state 38
    '('     shift, and go to state 39

    Expr  go to state 47
    T     go to state 41


State 40

   15 DoLoop: DO @1 Expr . Commands ENDDO
   28 Expr: Expr . OP T
   29     | Expr . NEG T
   30     | Expr . OP NEG T
   31     | Expr . NEG NEG T

    DO    shift, and go to state 16
    NAME  shift, and go to state 17
    OP    shift, and go to state 48
    NEG   shift, and go to state 49

    Commands     go to state 50
    DoLoop       go to state 19
    TurtCommand  go to state 20
    VarIs        go to state 21


State 41

   32 Expr: T .

    $default  reduce using rule 32 (Expr)


State 42

   24 Order: COLOR COL .

    $default  reduce using rule 24 (Order)


State 43

   23 Order: FORWARD Expr .
   28 Expr: Expr . OP T
   29     | Expr . NEG T
   30     | Expr . OP NEG T
   31     | Expr . NEG NEG T

    OP   shift, and go to state 48
    NEG  shift, and go to state 49

    $default  reduce using rule 23 (Order)


State 44

   25 VarIs: NAME IS Expr .
   28 Expr: Expr . OP T
   29     | Expr . NEG T
   30     | Expr . OP NEG T
   31     | Expr . NEG NEG T

    OP   shift, and go to state 48
    NEG  shift, and go to state 49

    $default  reduce using rule 25 (VarIs)


State 45

   22 Order: TURN NEG . Expr

    NUMBER  shift, and go to state 37
    NAME    shift, and go to state 38
    '('     shift, and go to state 39

    Expr  go to state 51
    T     go to state 41


State 46

   21 Order: TURN Expr .
   28 Expr: Expr . OP T
   29     | Expr . NEG T
   30     | Expr . OP NEG T
   31     | Expr . NEG NEG T

    OP   shift, and go to state 48
    NEG  shift, and go to state 49

    $default  reduce using rule 21 (Order)


State 47

   28 Expr: Expr . OP T
   29     | Expr . NEG T
   30     | Expr . OP NEG T
   31     | Expr . NEG NEG T
   33 T: '(' Expr . ')'

    OP   shift, and go to state 48
    NEG  shift, and go to state 49
    ')'  shift, and go to state 52


State 48

   28 Expr: Expr OP . T
   30     | Expr OP . NEG T

    NUMBER  shift, and go to state 37
    NAME    shift, and go to state 38
    NEG     shift, and go to state 53
    '('     shift, and go to state 39

    T  go to state 54


State 49

   29 Expr: Expr NEG . T
   31     | Expr NEG . NEG T

    NUMBER  shift, and go to state 37
    NAME    shift, and go to state 38
    NEG     shift, and go to state 55
    '('     shift, and go to state 39

    T  go to state 56


State 50

    8 Commands: Commands . TurtCommand
    9         | Commands . VarIs
   10         | Commands . DoLoop
   15 DoLoop: DO @1 Expr Commands . ENDDO

    DO     shift, and go to state 16
    ENDDO  shift, and go to state 57
    NAME   shift, and go to state 17

    DoLoop       go to state 34
    TurtCommand  go to state 35
    VarIs        go to state 36


State 51

   22 Order: TURN NEG Expr .
   28 Expr: Expr . OP T
   29     | Expr . NEG T
   30     | Expr . OP NEG T
   31     | Expr . NEG NEG T

    OP   shift, and go to state 48
    NEG  shift, and go to state 49

    $default  reduce using rule 22 (Order)


State 52

   33 T: '(' Expr ')' .

    $default  reduce using rule 33 (T)


State 53

   30 Expr: Expr OP NEG . T

    NUMBER  shift, and go to state 37
    NAME    shift, and go to state 38
    '('     shift, and go to state 39

    T  go to state 58


State 54

   28 Expr: Expr OP T .

    $default  reduce using rule 28 (Expr)


State 55

   31 Expr: Expr NEG NEG . T

    NUMBER  shift, and go to state 37
    NAME    shift, and go to state 38
    '('     shift, and go to state 39

    T  go to state 59


State 56

   29 Expr: Expr NEG T .

    $default  reduce using rule 29 (Expr)


State 57

   15 DoLoop: DO @1 Expr Commands ENDDO .

    $default  reduce using rule 15 (DoLoop)


State 58

   30 Expr: Expr OP NEG T .

    $default  reduce using rule 30 (Expr)


State 59

   31 Expr: Expr NEG NEG T .

    $default  reduce using rule 31 (Expr)
